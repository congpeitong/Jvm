### jvm架构模型
Java编译器输入的指令流，基本上是一种基于栈的指令集架构，另一种指令集架构则是基于寄存器的指令集架构。
1. 基于栈式架构的特点 
* 设计和实现更简单。适用于资源受限的系统
* 避开了寄存器的分配难题：使用零地址指令方式分配
* 指令流中的指令大部分是零地址指令，其执行过程依赖于操作栈。指令集更小编译器容易实现。
* **不需要硬件支持，可移植性更好，更好实现跨平台**
2. 基于寄存器架构的特点
* 典型的应用是x86的二进制指令集：比如传统的PC以及Android的Davlik虚拟机
* 指令集架构则是完全依赖硬件，可移植性差；（指令直接由cpu去执行)
* 性能优秀和执行更高效
* 花费更少的指令去完成一项操作
* 在大部分情况下，基于寄存器架构的指令集往往都是以一地址指令，二地址指令和三地址指令为主，而基于栈式架构的指令集却是以零地址指令为主
3. 什么是地址指令
* 零地址指令：无地址只有操作数
* 一地址指令：一个地址和操作数
* 二地址指令：两个地址和操作数
* 三地址指令：三个地址和操作数